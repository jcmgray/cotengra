[project]
name = "cotengra"
description = "Hyper optimized contraction trees for large tensor networks and einsums."
readme = { file = "README.md", content-type = "text/markdown" }
dynamic = ["version"]
authors = [{ name = "Johnnie Gray", email = "johnniemcgray@gmail.com" }]
license = { file = "LICENSE.md" }
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
]
keywords = [
    "contraction",
    "einsum",
    "graph",
    "hypergraph",
    "network",
    "partition",
    "tensor",
]
dependencies = ["autoray"]

[project.urls]
"Documentation" = "https://cotengra.readthedocs.io/"
"Repository" = "https://github.com/jcmgray/cotengra/"
"Issues" = "https://github.com/jcmgray/cotengra/issues"
"Changelog" = "https://cotengra.readthedocs.io/en/latest/changelog.html"

[project.optional-dependencies]
recommended = [
    "cmaes",
    "cotengrust",
    "cytoolz",
    "kahypar",
    "matplotlib",
    "networkx",
    "numpy",
    "opt_einsum",
    "optuna",
    "ray",
    "tqdm",
]
docs = [
    "astroid",
    "furo",
    "ipython",
    "myst-nb",
    "setuptools_scm",
    "sphinx",
    "sphinx-autoapi",
    "sphinx-copybutton",
    "sphinx-design",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "cotengra/_version.py"

[tool.pytest.ini_options]
testpaths = "tests"
markers = [
    "localonly: marks test to be skipped on CI",
]
# addopts = "--cov=cotengra --cov-report term-missing --cov-report xml:coverage.xml --verbose --durations=10"
# filterwarnings = "once"

[tool.coverage.run]
omit = ["*/cotengra/experimental/*"]
source = ["cotengra"]

[tool.pylama]
ignore = "C901"
max_line_length = 79

[tool.ruff]
line-length = 79
target-version = "py310"
lint.ignore = ["E741"]

[tool.black]
line-length = 79
target-version = ['py310']

# ---------------------------------- pixi ----------------------------------- #

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "win-64"]

[tool.pixi.dependencies]
autoray = ">=0.8.0,<0.9"

[tool.pixi.pypi-dependencies]
cotengra = { path = ".", editable = true }

[tool.pixi.feature.testminimal]
platforms = [ "linux-64" ]
[tool.pixi.feature.testminimal.dependencies]
cmaes = "*"
coverage = "*"
matplotlib = "*"
networkx = "*"
optuna = "*"
pytest = "*"
pytest-cov = "*"
seaborn = "*"
tqdm = "*"

[tool.pixi.feature.test.dependencies]
cmaes = "*"
coverage = "*"
matplotlib = "*"
networkx = "*"
opt_einsum = "*"
optuna = "*"
pytest = "*"
pytest-cov = "*"
seaborn = "*"
tqdm = "*"
[tool.pixi.feature.test.pypi-dependencies]
cotengrust = ">=0.2.0"

[tool.pixi.feature.pyold.dependencies]
python = "3.10.*"
[tool.pixi.feature.pymid.dependencies]
python = "3.12.*"
[tool.pixi.feature.pynew.dependencies]
python = "3.13.*"

[tool.pixi.feature.linux]
platforms = ["linux-64"]
pypi-dependencies = { kahypar = "*", ray = "*" }
[tool.pixi.feature.mac]
platforms = ["osx-arm64"]
pypi-dependencies = { kahypar = "*", ray = "*" }
[tool.pixi.feature.windows]
platforms = ["win-64"]

[tool.pixi.feature.docs.dependencies]
astroid = "*"
furo = "*"
ipython = "*"
myst-nb = "*"
setuptools_scm = "*"
sphinx = "*"
sphinx-autoapi = "*"
sphinx-copybutton = "*"
sphinx-design = "*"

[tool.pixi.environments]
test-linux-minimal = { features = ["testminimal"] }
test-linux-pyold = { features = ["pyold", "test", "linux"] }
test-linux-pynew = { features = ["pynew", "test", "linux"] }
test-mac = { features = ["pymid", "test", "mac"] }
test-windows = { features = ["pymid", "test", "windows"] }
readthedocs = { features = ["docs"] }
